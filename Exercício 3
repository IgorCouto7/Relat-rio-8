class ArmaCorpoACorpo:
    def __init__(self, nome, dano):
        self.nome = nome
        self.dano = dano

    def __str__(self):
        return f"Arma: {self.nome} (Dano: {self.dano})"


class PhantomThieves:
    def __init__(self, nome, arma):
        self.nome = nome
        self.arma = arma

    def __str__(self):
        return f"Membro: {self.nome}, {self.arma}"


class Joker:
    def __init__(self, equipe=None):
        # Composição → Joker sempre cria sua própria arma
        self.arma = ArmaCorpoACorpo("Faca", 50)

        # Agregação → recebe uma lista de membros (PhantomThieves)
        if equipe is None:
            equipe = []
        self.equipe = equipe

    def mostrar_equipe(self):
        print(f"Joker empunha {self.arma}")
        print("Equipe Phantom Thieves:")
        for membro in self.equipe:
          
m1 = PhantomThieves("Ryuji", ArmaCorpoACorpo("Cacetete", 40))
m2 = PhantomThieves("Ann", ArmaCorpoACorpo("Chicote", 35))
m3 = PhantomThieves("Morgana", ArmaCorpoACorpo("Estilingue", 25))

# Criando Joker com a equipe
joker = Joker([m1, m2, m3])
joker.mostrar_equipe()
